{"title":"Open-Ended Analysis: National Parks","markdown":{"yaml":{"title":"Open-Ended Analysis: National Parks","author":"Hailey Ernest","date":"2023-12-12","categories":["code","analysis"]},"headingText":"Investigating National Parks","headingAttr":{"id":"","classes":[],"keyvalue":[["style","color: red"]]},"containsRefs":false,"markdown":"\n\n## Data\n\n```{r setup}\n# code chunk to load packages and import data\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(purrr)\nnational_park <- read.csv(\"national_park_trails.csv\")\n```\n\nThe dataset analyzed is the collection of all of the national parks in the United States, including the state in which each park is located, the date when it was established, its total area, the number of recreation visitors it receives each year, and a description of its key features.\n\n## Start Exploring\n\n#### What is the length in miles of the fourth longest trail in California?\n\n```{r}\n# Q1 code + output\nnational_park|>\n  filter(state_name == \"California\")|>\n  mutate(length_mi = length*0.000621371) |>\n  slice_max(n = 4, order_by = length_mi)|>\n  slice(4)|>\n  select(name, length_mi)\n```\n\n\nConsider an \"easy\" trail to be one that has an elevation gain of less than 500 meters, a distance of less than 5 kilometers, and a difficulty rating below 4.\n\n#### Which California National Park has most \"easy\" trails?\n\n```{r}\nnational_park|>\n  mutate(length_km = length*0.001)|>\n  filter(elevation_gain < 500, difficulty_rating < 4, length_km < 5)|>\n  group_by(area_name)|>\n  summarise(easy_trail_num = n())|>\n  slice_max(n=1, order_by = easy_trail_num)\n```\n\n#### How many National Parks contain the word \"Mountain\" somewhere in their name?\n\n(If it is an abbreviation, like \"Mount\" or \"Mt\", that counts too.)\n\n```{r}\nnational_park|>\n  filter(str_detect(area_name, \"Mount|Mt|Mountain\"))|>\n  count()\n```\nWrite code to create the np_trails_new object to follow specific criteria.\n\n```{r}\nnp_trails_new <- national_park |>\n  pivot_longer(\n    cols = c(avg_rating, difficulty_rating, popularity, visitor_usage),\n    names_to = \"measure\",\n    values_to = \"score\")\n```\n\n```{r}\nnp_trails_new %>%\n  ggplot(aes(x=score)) +\n  geom_density() +\n  facet_wrap(~ measure, scales = 'free') +\n  ggtitle(\"Overall distribution of various trail scores in National parks\")\n```\n\n#### Write a functions to help recommend trails to a user.\n\nThe function will have as its input the dataset and the name of a National Park, and the following optional arguments:\n\n-   A minimum trail elevation gain (in meters)\n-   A maximum trail elevation gain (in meters)\n-   A minimum trail rating\n-   The type of trail\n\n\n```{r}\nrecommend_trails <- function(data, park_name, min_elev = 0, max_elev = Inf, min_rating = 0, trl_type = NULL){\n\n  stopifnot(is.data.frame(data),\n            is.numeric(min_elev),\n            is.numeric(max_elev),\n            is.numeric(min_rating))\n  \n  recommended_trails <- data |>\n    filter(area_name == park_name,\n           elevation_gain >= min_elev,\n           elevation_gain <= max_elev,\n           avg_rating >= min_rating)\n\n  if (!missing(trl_type)) {\n    recommended_trails <- recommended_trails |>\n      filter(route_type %in% trl_type)\n  }\n  \n  recommended_trails <- recommended_trails |>\n    select(name)\n  \n  return(recommended_trails)\n}\n\n```\n\nTest the function with the code below. \n```{r}\n## Q5 code - do not change except for the dataset name\nnational_park |> \n  recommend_trails(\"Haleakala National Park\", \n                   min_elev = 1000, \n                   min_rating = 4\n                   )\n```\n## Functional Programming with map\n\n#### Use your function to recommend me trails from nearby parks\n\nI am looking for a trail that is:\n\n-   1000-3000 meters of elevation (I like mountains, but not too big.)\n\n-   Rated at least a 4.5 on average\n\n-   A loop trail (I don't like to retrace my steps)\n\nIterate over the following parks to recommend me trails: Yosemite, Joshua Tree, Death Valley, Pinnacles, Lassen, Sequoia, and King's Canyon.\n\n```{r}\nmap_dfr(.x = c(\"Yosemite National Park\",\n               \"Joshua Tree National Park\",\n               \"Death Valley National Park\",\n               \"Pinnacles National Park\",\n               \"Lassen National Park\",\n               \"Sequoia National Park\",\n               \"King's Canyon National Park\"),\n        ~ recommend_trails(data = national_park,\n                           park_name = .x,\n                           min_elev = 1000,\n                           max_elev = 3000,\n                           min_rating = 4.5,\n                           trl_type = \"loop\"))\n```\n\n# Research Question\n\nTwo of the most famous parks in the world are Yosemite and Yellowstone. We are interested in studying if one of the parks has \"better\" trails than the other. It is up to you to decide what the definition of \"better\" is that you will use.\n\n## Visualization\n\n```{r}\nnational_park |>\n  filter(area_name %in% c(\"Yosemite National Park\", \"Yellowstone National Park\"),\n         avg_rating > 3, \n         !str_detect(features, \"'dogs-no'\"))|>\n  ggplot(aes(x=popularity, y=length, color=area_name))+\n  geom_line()+\n  labs(x = \"Popularity\", \n       y= \"Length (meters)\", \n       title = \"Popularity of Famous Trails By Trail Length\", \n       color=\"National Park\")+\n  scale_color_manual(values = c(\"Yosemite National Park\" = \"brown\", \"Yellowstone National Park\" = \"#CD9600\"))\n```\nAfter comparing Yosemite and Yellowstone National Parks, we conclude that Yosemite National Park is better because the parks that have a high average rating while allowing dogs have a low popularity (less crowded) and variety of trail lengths compared to Yellowstone National Parks.\n\n## Statistical Analysis\n\nPreforming a statistical analysis to address the research question using Welch Two Sample t-test.\n\n```{r}\npark_data <- national_park %>%\n  filter(area_name %in% c(\"Yosemite National Park\", \"Yellowstone National Park\"))\n```\n\n```{r}\n# Q9 statistical model code\nbetter_park <- national_park |>\n  filter(area_name %in% c(\"Yosemite National Park\", \"Yellowstone National Park\"))|>\n  select(area_name, avg_rating, popularity)\n\nt_test_rating_result <- t.test(avg_rating ~ area_name, data = better_park)\nt_test_popularity_result <- t.test(popularity ~ area_name, data = better_park)\n\nprint(t_test_rating_result)\nprint(t_test_popularity_result)\n```\n\n```{r}\nbetter_park|>\n  ggplot(aes(x=area_name, y=popularity)) +  \n  geom_boxplot() + \n  ylab(\"Popularity\") + \n  xlab(\"National Park\") + \n  labs(title=\"Side-by-side Boxplot of Popularity of Famous National Parks\")\n```\n\nBased on the statistical evidence found in the t-test comparing Yellow Stone National Park and Yosemite National Park, we found that when it comes to average rating there was no statistically significant difference between the parks but when it comes to popularity Yosemite had a statistically significant average of 9.235 compared to 7.001 making it the better National Park.\n","srcMarkdownNoYaml":"\n### Investigating National Parks {style=\"color: red\"}\n\n## Data\n\n```{r setup}\n# code chunk to load packages and import data\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(purrr)\nnational_park <- read.csv(\"national_park_trails.csv\")\n```\n\nThe dataset analyzed is the collection of all of the national parks in the United States, including the state in which each park is located, the date when it was established, its total area, the number of recreation visitors it receives each year, and a description of its key features.\n\n## Start Exploring\n\n#### What is the length in miles of the fourth longest trail in California?\n\n```{r}\n# Q1 code + output\nnational_park|>\n  filter(state_name == \"California\")|>\n  mutate(length_mi = length*0.000621371) |>\n  slice_max(n = 4, order_by = length_mi)|>\n  slice(4)|>\n  select(name, length_mi)\n```\n\n\nConsider an \"easy\" trail to be one that has an elevation gain of less than 500 meters, a distance of less than 5 kilometers, and a difficulty rating below 4.\n\n#### Which California National Park has most \"easy\" trails?\n\n```{r}\nnational_park|>\n  mutate(length_km = length*0.001)|>\n  filter(elevation_gain < 500, difficulty_rating < 4, length_km < 5)|>\n  group_by(area_name)|>\n  summarise(easy_trail_num = n())|>\n  slice_max(n=1, order_by = easy_trail_num)\n```\n\n#### How many National Parks contain the word \"Mountain\" somewhere in their name?\n\n(If it is an abbreviation, like \"Mount\" or \"Mt\", that counts too.)\n\n```{r}\nnational_park|>\n  filter(str_detect(area_name, \"Mount|Mt|Mountain\"))|>\n  count()\n```\nWrite code to create the np_trails_new object to follow specific criteria.\n\n```{r}\nnp_trails_new <- national_park |>\n  pivot_longer(\n    cols = c(avg_rating, difficulty_rating, popularity, visitor_usage),\n    names_to = \"measure\",\n    values_to = \"score\")\n```\n\n```{r}\nnp_trails_new %>%\n  ggplot(aes(x=score)) +\n  geom_density() +\n  facet_wrap(~ measure, scales = 'free') +\n  ggtitle(\"Overall distribution of various trail scores in National parks\")\n```\n\n#### Write a functions to help recommend trails to a user.\n\nThe function will have as its input the dataset and the name of a National Park, and the following optional arguments:\n\n-   A minimum trail elevation gain (in meters)\n-   A maximum trail elevation gain (in meters)\n-   A minimum trail rating\n-   The type of trail\n\n\n```{r}\nrecommend_trails <- function(data, park_name, min_elev = 0, max_elev = Inf, min_rating = 0, trl_type = NULL){\n\n  stopifnot(is.data.frame(data),\n            is.numeric(min_elev),\n            is.numeric(max_elev),\n            is.numeric(min_rating))\n  \n  recommended_trails <- data |>\n    filter(area_name == park_name,\n           elevation_gain >= min_elev,\n           elevation_gain <= max_elev,\n           avg_rating >= min_rating)\n\n  if (!missing(trl_type)) {\n    recommended_trails <- recommended_trails |>\n      filter(route_type %in% trl_type)\n  }\n  \n  recommended_trails <- recommended_trails |>\n    select(name)\n  \n  return(recommended_trails)\n}\n\n```\n\nTest the function with the code below. \n```{r}\n## Q5 code - do not change except for the dataset name\nnational_park |> \n  recommend_trails(\"Haleakala National Park\", \n                   min_elev = 1000, \n                   min_rating = 4\n                   )\n```\n## Functional Programming with map\n\n#### Use your function to recommend me trails from nearby parks\n\nI am looking for a trail that is:\n\n-   1000-3000 meters of elevation (I like mountains, but not too big.)\n\n-   Rated at least a 4.5 on average\n\n-   A loop trail (I don't like to retrace my steps)\n\nIterate over the following parks to recommend me trails: Yosemite, Joshua Tree, Death Valley, Pinnacles, Lassen, Sequoia, and King's Canyon.\n\n```{r}\nmap_dfr(.x = c(\"Yosemite National Park\",\n               \"Joshua Tree National Park\",\n               \"Death Valley National Park\",\n               \"Pinnacles National Park\",\n               \"Lassen National Park\",\n               \"Sequoia National Park\",\n               \"King's Canyon National Park\"),\n        ~ recommend_trails(data = national_park,\n                           park_name = .x,\n                           min_elev = 1000,\n                           max_elev = 3000,\n                           min_rating = 4.5,\n                           trl_type = \"loop\"))\n```\n\n# Research Question\n\nTwo of the most famous parks in the world are Yosemite and Yellowstone. We are interested in studying if one of the parks has \"better\" trails than the other. It is up to you to decide what the definition of \"better\" is that you will use.\n\n## Visualization\n\n```{r}\nnational_park |>\n  filter(area_name %in% c(\"Yosemite National Park\", \"Yellowstone National Park\"),\n         avg_rating > 3, \n         !str_detect(features, \"'dogs-no'\"))|>\n  ggplot(aes(x=popularity, y=length, color=area_name))+\n  geom_line()+\n  labs(x = \"Popularity\", \n       y= \"Length (meters)\", \n       title = \"Popularity of Famous Trails By Trail Length\", \n       color=\"National Park\")+\n  scale_color_manual(values = c(\"Yosemite National Park\" = \"brown\", \"Yellowstone National Park\" = \"#CD9600\"))\n```\nAfter comparing Yosemite and Yellowstone National Parks, we conclude that Yosemite National Park is better because the parks that have a high average rating while allowing dogs have a low popularity (less crowded) and variety of trail lengths compared to Yellowstone National Parks.\n\n## Statistical Analysis\n\nPreforming a statistical analysis to address the research question using Welch Two Sample t-test.\n\n```{r}\npark_data <- national_park %>%\n  filter(area_name %in% c(\"Yosemite National Park\", \"Yellowstone National Park\"))\n```\n\n```{r}\n# Q9 statistical model code\nbetter_park <- national_park |>\n  filter(area_name %in% c(\"Yosemite National Park\", \"Yellowstone National Park\"))|>\n  select(area_name, avg_rating, popularity)\n\nt_test_rating_result <- t.test(avg_rating ~ area_name, data = better_park)\nt_test_popularity_result <- t.test(popularity ~ area_name, data = better_park)\n\nprint(t_test_rating_result)\nprint(t_test_popularity_result)\n```\n\n```{r}\nbetter_park|>\n  ggplot(aes(x=area_name, y=popularity)) +  \n  geom_boxplot() + \n  ylab(\"Popularity\") + \n  xlab(\"National Park\") + \n  labs(title=\"Side-by-side Boxplot of Popularity of Famous National Parks\")\n```\n\nBased on the statistical evidence found in the t-test comparing Yellow Stone National Park and Yosemite National Park, we found that when it comes to average rating there was no statistically significant difference between the parks but when it comes to popularity Yosemite had a statistically significant average of 9.235 compared to 7.001 making it the better National Park.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"source","theme":"flatly","title-block-banner":true,"title":"Open-Ended Analysis: National Parks","author":"Hailey Ernest","date":"2023-12-12","categories":["code","analysis"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}